SHELL := /bin/bash
FILTERING_ALGORITHMS := sequential-d2 sequential-d2-induced
EXCEPTS := 0 1 2 3 4 5 10 20
RESULTS := results
INSTANCES := $(shell cut -d' ' -f1 instances.txt )

all : $(foreach f, $(FILTERING_ALGORITHMS), $(RESULTS)/which-k-$(f).data $(RESULTS)/family-which-k-$(f).data )

whiches : $(foreach i, $(INSTANCES), $(foreach a, $(FILTERING_ALGORITHMS), $(RESULTS)/$(a)/$i.which-k ))

define ALGORITHM_template
$(RESULTS)/$(1)/%.which-k : $(foreach x,$(EXCEPTS), $(RESULTS)/$(1)/except-$(x)/%.out )
	{ for x in $(EXCEPTS) ; do \
	    if grep -q aborted $(RESULTS)/$(1)/except-$$$$x/$$*.out ; then echo 'x' ; \
	    elif grep -q true $(RESULTS)/$(1)/except-$$$$x/$$*.out ; then echo '1' ; \
	    elif grep -q false $(RESULTS)/$(1)/except-$$$$x/$$*.out ; then echo '0' ; \
	    else exit 1 ; \
	    fi ; done ; } | xargs | tee $$@
endef

$(RESULTS)/which-k-%.data : $(foreach i, $(INSTANCES), $(foreach a, $(FILTERING_ALGORITHMS), $(RESULTS)/$(a)/$i.which-k ))
	{ \
	    echo instance family $$(for x in $(EXCEPTS) ; do echo $*-except-$$x ; done ; ) ; \
	    cat instances.txt | while read i p t f ; do \
	    echo $$i $$f $$(cat $(RESULTS)/$*/$$i.which-k ) ; \
	    done ; \
	} | tee $@

$(RESULTS)/family-which-k-%.data : $(RESULTS)/which-k-%.data
	{ \
	    echo family total k=0 k=1 k=2 k=3 k=4 k=5 k\\le10 k\\le20 larger unknown ; \
	    cat unsat-families.txt | while read f ; do \
		{ sed -n -e $${f}p < families.txt ; \
		grep --count '^\S\+ '$$f' ' < $^ ; \
		grep --count '^\S\+ '$$f' 1' < $^ ; \
		grep --count '^\S\+ '$$f' 0 1' < $^ ; \
		grep --count '^\S\+ '$$f' 0 0 1' < $^ ; \
		grep --count '^\S\+ '$$f' 0 0 0 1' < $^ ; \
		grep --count '^\S\+ '$$f' 0 0 0 0 1' < $^ ; \
		grep --count '^\S\+ '$$f' 0 0 0 0 0 1' < $^ ; \
		grep --count '^\S\+ '$$f' 0 0 0 0 0 0 1' < $^ ; \
		grep --count '^\S\+ '$$f' 0 0 0 0 0 0 0 1' < $^ ; \
		grep --count '^\S\+ '$$f' 0 0 0 0 0 0 0 0' < $^ ; \
		grep --count '^\S\+ '$$f' [^1]*x' < $^ ; \
		} | xargs ; \
	    done ; \
	} | tee $@

$(foreach a,$(FILTERING_ALGORITHMS),$(eval $(call ALGORITHM_template,$(a))))
